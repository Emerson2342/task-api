@page "/home"
@using TaskList.Components.Domain.Infra.Data
@using TaskList.Components.Domain.Main.DTOs.UserDTOs
@using TaskList.Components.Domain.Main.UseCases.ResponseCase

@inject AppDbContext Context
@inject HttpClient Http
@inject Authenticationservice Authenticationservice
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<PageTitle>Página Inicial</PageTitle>

<h1>Login</h1>


<EditForm Model="model" OnSubmit="HandleSubmit" FormName="taskForm">
    <div class="mb-1">
        <label for="Login" class="form-label">Email</label>
        <InputText class="form-control" id="email" @bind-Value="model.Email" />
    </div>

    <div class="mb-1">
        <label for="Password" class="form-label">Senha</label>
        <InputText class="form-control" id="Title" @bind-Value="model.Password" />
    </div>

    <button class="btn btn-success" type="submit">Entrar</button>

</EditForm>

<div class="mt-3 btn-group">
    <a class="btn btn-primary m-1" role="button" href="forgot-password">Esqueceu a senha?</a>

    <a class="btn btn-info m-1" role="button" href="create-user">Não tem conta?</a>

</div>

@if (!string.IsNullOrEmpty(responseMessage))
{
    <div class="alert alert-info mt-3">
        @responseMessage
    </div>
}

@code {

    [SupplyParameterFromForm]
    private RequestLogin model { get; set; } = new();

    string token = string.Empty;
    string tokenStored = string.Empty;
    private string responseMessage = string.Empty;

    private async Task<Response> HandleSubmit()
    {
        var result = await Authenticationservice.Login(model);
        token = result.Token;
        responseMessage = result.Message;
        return result;
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        responseMessage = "Iniciou";
        StateHasChanged();
    }

    private async Task SaveToken()
    {
        await sessionStorage.SetItemAsync("authToken", token);
        tokenStored = await sessionStorage.GetItemAsync<string>("authToken");
        responseMessage = "Token salvo com sucesso!";
    }

    // protected override async Task OnAfterRenderAsync(bool firstRender)
    // {

    //     if (firstRender)
    //     {
    //         if (!string.IsNullOrEmpty(token))
    //         {
    //             await sessionStorage.SetItemAsync("authToken", token);
    //             tokenStored = await sessionStorage.GetItemAsync<string>("authToken");
    //         }
    //         else
    //         {
    //             responseMessage = "Token não vazio";
    //         }

    //         token = string.Empty;
    //         //StateHasChanged();
    //     }

    // }
}