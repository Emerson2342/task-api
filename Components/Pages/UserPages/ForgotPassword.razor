@page "/forgot-password"

@inject HttpClient Http
@using TaskList.Components.Domain.Main.DTOs.UserDTOs
@using TaskList.Components.Domain.Main.UseCases.ResponseCase


<h3 style="text-align:center;width:100%">Esqueceu a senha?</h3>
<div style="display: flex;justify-content: center;align-items: center;width: 90%;">
    <div>
        <img src="images/lostPassword.png" alt="Imagem Esqueceu a Senha" />
    </div>

    <div style="width:25%">       
            <EditForm Model="model" OnSubmit="HandleSubmit" FormName="passwordUserForm">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label for="Email" class="form-label">Email</label>
                    <InputText class="form-control" style="text-align:center" placeHolder="Digite seu email" type="email" id="Email" @bind-Value="model.Email" />
                </div>
                <button class="btn btn-success" type="submit" style="width:100%">Enviar link</button>
                <a class="btn btn-primary" href="/home" style="width:100%;margin-top:3%">Voltar</a>
            </EditForm>
        
    </div>
</div>

@if (!string.IsNullOrEmpty(responseMessage))
{
    <div class="alert alert-info mt-3 mx-auto text-center" style="width:50%;">
        @responseMessage
    </div>
}

@code {
    [SupplyParameterFromForm]
    private RequestEmail model { get; set; } = new();

    private string? responseMessage;

    private async Task<Response> HandleSubmit()
    {
        var response = await Http.PostAsJsonAsync("user/reset-password-out", model);

        var result = await response.Content.ReadFromJsonAsync<Response>();

        responseMessage = result.Message;
        model.Email = string.Empty;

        return result;
    }

}
