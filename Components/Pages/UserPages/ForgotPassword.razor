@page "/reset-password"

@inject HttpClient Http
@using TaskList.Components.Domain.Main.DTOs.UserDTOs
@using TaskList.Components.Domain.Main.UseCases.ResponseCase

<h3>Esqueceu a senha?</h3>

<EditForm Model="model" OnSubmit="HandleSubmit" FormName="passwordUserForm">
    <DataAnnotationsValidator />
    <ValidationSummary />


    <div class="mb-3">
        <label for="Email" class="form-label">Email</label>
        <InputText class="form-control" type="email" id="Email" @bind-Value="model.Email" />
        <ValidationMessage For="@(() => model.Email)" />
    </div>

    <button class="btn btn-success" type="submit">Enviar link</button>
</EditForm>

@if (!string.IsNullOrEmpty(responseMessage))
{
    <div class="alert alert-info mt-3">
        @responseMessage
    </div>
}

@code {
    [SupplyParameterFromForm]
    private RequestEmail model { get; set; } = new();

    private string? responseMessage;

    private async Task<Response> HandleSubmit()
    {
        var response = await Http.PostAsJsonAsync("user/reset-password-out", model);

        var result = await response.Content.ReadFromJsonAsync<Response>();

        responseMessage = result.Message;
        model.Email = string.Empty;

        return result;
    }

}
