@page "/change-password"

@inject HttpClient Http
@using TaskList.Components.Domain.Main.DTOs.UserDTOs
@using TaskList.Components.Domain.Main.UseCases.ResponseCase

<div style="width:100%;display:flex;flex-direction:column;align-items:center">
    <h3>Alterar a Senha</h3>

    <div>
        <img src="images/newPassword.jpg" alt="Imagem Novo Usuario" />
    </div>
    <EditForm style="width:30%" Model="model" OnSubmit="HandleSubmit" FormName="passwordUserForm">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label for="Email" class="form-label">Nova Senha</label>
            <InputText class="form-control" placeHolder="Digite a nova senha" type="text" id="Password" @bind-Value="model.NewPassword" />
        </div>
        <div style="display:flex;justify-content:center">
            <button class="btn btn-success" style="width:50%" type="submit">Alterar senha</button>
        </div>
    </EditForm>

    @if (!string.IsNullOrEmpty(responseMessage))
    {
        <div class="alert alert-info mt-3 mx-auto text-center" style="width:50%;">
            @responseMessage
        </div>
    }
</div>

@code {
    [SupplyParameterFromForm]
    private RequestPassword model { get; set; } = new();

    private string? responseMessage;

    private async Task<Response> HandleSubmit()
    {
        var response = await Http.PostAsJsonAsync("user/change-password-in", model);

        var result = await response.Content.ReadFromJsonAsync<Response>();

        responseMessage = result.Message;
        model.NewPassword = string.Empty;

        return result;
    }

}
